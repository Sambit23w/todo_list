{"version":3,"sources":["components/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","task","event","setState","target","value","add","temp","state","arr","push","remove","splice","length","del","element","index","Container","Row","Col","lg","md","sm","xs","fluid","className","Card","Body","Text","this","onChange","placeholder","required","Button","disabled","variant","onClick","map","style","borderBottom","paddingLeft","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAIqBA,E,kDACjB,aAAe,IAAD,8BACV,gBAMJC,KAAO,SAACC,GACJ,EAAKC,SAAS,CACVF,KAAMC,EAAME,OAAOC,SATb,EAadC,IAAM,WACF,IAAMC,EAAO,EAAKC,MAAMC,IACxBF,EAAKG,KACD,EAAKF,MAAMP,MAEf,EAAKE,SAAS,CACVM,IAAKF,EACLN,KAAM,MApBA,EAwBdU,OAAS,WACL,IAAMJ,EAAO,EAAKC,MAAMC,IACxBF,EAAKK,OAAO,EAAGL,EAAKM,QACpB,EAAKV,SAAS,CACVM,IAAKF,KA5BC,EA+BdO,IAAM,SAACC,EAASC,GACZ,IAAMT,EAAO,EAAKC,MAAMC,IACxBF,EAAKK,OAAOI,EAAO,GACnB,EAAKb,SAAS,CACVM,IAAKF,KAjCT,EAAKC,MAAQ,CACTP,KAAM,GACNQ,IAAK,IAJC,E,0CAwCd,WAAU,IAAD,OACL,OACI,gCACI,cAACQ,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAjC,SACI,yDAMZ,cAACN,EAAA,EAAD,CAAWO,OAAK,EAAhB,SACI,cAACN,EAAA,EAAD,CAAKO,UAAU,iCAAf,SACI,cAACN,EAAA,EAAD,CAAKE,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAzB,SACI,cAACG,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,KAAN,WACI,cAACD,EAAA,EAAKE,KAAN,UACI,cAACX,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,uBAAOb,MAAOwB,KAAKrB,MAAMP,KAAM6B,SAAUD,KAAK5B,KAAM8B,YAAY,WAAWC,UAAQ,IACnF,cAACC,EAAA,EAAD,CAAQC,SAA8B,KAApBL,KAAKrB,MAAMP,KAA4BkC,QAAQ,UAAUC,QAASP,KAAKvB,IAAzF,wBAOZ,6BACKuB,KAAKrB,MAAMC,IAAI4B,KAAI,SAACtB,EAASC,GAC1B,OACI,mCACI,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAKO,UAAU,iCAAiCa,MAAO,CAAEC,aAAc,kBAAmBC,YAAa,QAAvG,UACI,cAACrB,EAAA,EAAD,UACI,6BAAiB,4BAAIJ,KAAZC,KAGb,cAACG,EAAA,EAAD,UACI,cAACc,EAAA,EAAD,CAAQE,QAAQ,SAASC,QAAS,SAAClC,GAAY,EAAKY,IAAIC,EAASC,IAAjE,+BAS5B,cAACiB,EAAA,EAAD,CAAQE,QAAQ,SAASC,QAASP,KAAKlB,OAAvC,0C,GAzFF8B,aCSnBC,MATf,WACE,OACE,qBAAKjB,UAAU,MAAf,SACA,cAAC,EAAD,OCKWkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a6467fa1.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Button, Card, Container, Row, Col } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default class Todo extends Component {\n    constructor() {\n        super();\n        this.state = {\n            task: '',\n            arr: []\n        }\n    }\n    task = (event) => {\n        this.setState({\n            task: event.target.value\n        })\n    }\n\n    add = () => {\n        const temp = this.state.arr\n        temp.push(\n            this.state.task,\n        )\n        this.setState({\n            arr: temp,\n            task: \"\"\n        })\n\n    }\n    remove = () => {\n        const temp = this.state.arr\n        temp.splice(0, temp.length)\n        this.setState({\n            arr: temp\n        })\n    }\n    del = (element, index) => {\n        const temp = this.state.arr\n        temp.splice(index, 1)\n        this.setState({\n            arr: temp,\n           \n        })\n\n    }\n    render() {\n        return (\n            <div>\n                <Container>\n                    <Row>\n                        <Col lg={12} md={12} sm={12} xs={12}>\n                            <h1>To-DO Application</h1>\n                        </Col>\n                    </Row>\n                </Container>\n\n\n                <Container fluid>\n                    <Row className='mt-5 justify-content-lg-center'>\n                        <Col md={12} sm={12} xs={12} >\n                            <Card >\n                                <Card.Body>\n                                    <Card.Text>\n                                        <Container>\n                                            <Row>\n                                                <input value={this.state.task} onChange={this.task} placeholder=\"Add Task\" required />\n                                                <Button disabled={this.state.task === \"\" ? true : false} variant=\"success\" onClick={this.add}>Add</Button>\n\n                                            </Row>\n                                        </Container>\n\n\n                                    </Card.Text>\n                                    <ol >\n                                        {this.state.arr.map((element, index) => {\n                                            return (\n                                                <>\n                                                    <Container>\n                                                        <Row className='mt-5 justify-content-lg-center' style={{ borderBottom: \"3px solid black\", paddingLeft: '2rem' }}>\n                                                            <Col>\n                                                                <li key={index} ><p>{element}</p></li>\n\n                                                            </Col>\n                                                            <Col>\n                                                                <Button variant=\"danger\" onClick={(event) => { this.del(element, index) }}>DEL</Button>\n\n                                                            </Col>\n                                                        </Row>\n                                                    </Container>\n                                                </>\n                                            )\n                                        })}\n                                    </ol>\n                                    <Button variant=\"danger\" onClick={this.remove}>Remove All</Button>\n                                </Card.Body>\n                            </Card>\n\n                        </Col>\n\n                    \n                    </Row>\n                </Container>\n\n\n\n\n            </div>\n        )\n    }\n}\n","import './App.css';\nimport Todo from './components/Todo'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Todo/>\n     \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}